
- General docs to be written:
=> Concept. (done? David, could you proof-read this in the smueller/typemapdocs branch?)
=> Structure of typemap file (done? review?)
=> Figure out whether to document that comments in INPUT/OUTPUT don't work or whether to
   "fix" what might be relied on somewhere (Steffen WIP)
=> typemaps and CPAN distributions (done? Also needs review)
=> On writing typemaps: 
   => What they are (double-quote interpolated Perl strings that contain C)
   => What variables they have access to by default.
      => Given this opportunity of having to read ParseXS code, it might be a good idea
         to change the way that typemaps are evaluated and encapsulate it more, likely
         by copious use of eval "".

=> Should we document how exactly the T_ARRAY mess works? It's really, really nasty
   and in a better world, I'd just kill it off and replace it with something that
   doesn't give me an ulcer.

- Typemap docs/tests that need work:

T_ARRAY => kind of fucked up, but tested and documented. Docs could use an example.
T_CALLBACK => no docs, no tests
T_DATAUNIT => no docs, no tests
T_IN => no docs, no tests
T_OUT => no docs, no tests
T_INOUT => docs, but no tests
T_OPAQUEPTR => Documented, tested, but an example in the docs could help
T_OPAQUE => Documented, tested, but the docs are slightly opaque? ;)
T_PACKED => No docs, no tests
T_PACKEDARRAY => No docs, no tests
T_PTR => A little light on docs?
T_PTRDESC => no docs, no tests
T_REF_IV_REF => no docs, no tests
T_REFOBJ => no docs, no tests

T_REFREF => no docs, no tests (Steffen WIP: Docs added, but no tests yet. Maybe this should just go away instead)

T_LONG => Documented, but not tested (DONE, tests added)
T_SHORT => docs, but no tests (DONE, tests added)
T_U_INT => docs, but no tests (DONE, tests added)
T_INT => Documented as being identical in effect to using int+T_IV, not tested (DONE, tests added)
